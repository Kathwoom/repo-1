Qn. Define 2 classes; one for generating Fibonacci numbers and other for displaying even
numbers in a given range. Implement using threads. (Runnable Interface) 
************************************************************************************************************************

class FibonacciGenerator implements Runnable {
    private int n;
    
    public FibonacciGenerator(int n) {
        this.n = n;
    }
    
    @Override
    public void run() {
        int prev = 0;
        int curr = 1;
        System.out.println("Fibonacci Series:");
        
        for (int i = 0; i < n; i++) {
            System.out.print(curr + " ");
            int next = prev + curr;
            prev = curr;
            curr = next;
        }
    }
}

class EvenNumberPrinter implements Runnable {
    private int start;
    private int end;
    
    public EvenNumberPrinter(int start, int end) {
        this.start = start;
        this.end = end;
    }
    
    @Override
    public void run() {
        System.out.println("\nEven Numbers in Range " + start + " to " + end + ":");
        
        for (int i = start; i <= end; i++) {
            if (i % 2 == 0) {
                System.out.print(i + " ");
            }
        }
    }
}

public class thread2 {
    public static void main(String[] args) {
        int n = 10; // Number of Fibonacci numbers
        int start = 1; // Start of even numbers range
        int end = 20; // End of even numbers range
        
        Runnable fibonacciRunnable = new FibonacciGenerator(n);
        Runnable evenNumbersRunnable = new EvenNumberPrinter(start, end);
        
        Thread fibonacciThread = new Thread(fibonacciRunnable);
        Thread evenNumbersThread = new Thread(evenNumbersRunnable);
        
        fibonacciThread.start();
        evenNumbersThread.start();
        
        System.out.println("Both threads have finished.");
    }
}
